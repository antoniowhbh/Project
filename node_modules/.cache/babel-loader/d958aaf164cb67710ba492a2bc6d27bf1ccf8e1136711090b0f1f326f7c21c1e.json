{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/courses/courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './courses.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseSelection() {\n  _s();\n  const [courses, setCourses] = useState([]); // State to store the list of courses\n  const [selectedCourses, setSelectedCourses] = useState([]); // State to store selected courses\n  const [searchTerm, setSearchTerm] = useState(''); // State to store the search term\n  const navigate = useNavigate();\n\n  // Fetch courses on component mount\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const response = await fetch('http://localhost:5000/api/courses/courses');\n      const data = await response.json();\n      setCourses(data);\n    };\n    fetchCourses();\n  }, []);\n\n  // Handle course toggle\n  const handleCourseToggle = courseId => {\n    setSelectedCourses(prevSelectedCourses => prevSelectedCourses.includes(courseId) ? prevSelectedCourses.filter(id => id !== courseId) : [...prevSelectedCourses, courseId]);\n  };\n\n  // Handle submit\n  const handleSubmit = async () => {\n    const response = await fetch('http://localhost:5000/api/courses/select-courses', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        student_id: 'your_student_id',\n        // Replace 'your_student_id' with the actual student ID\n        selected_courses: selectedCourses\n      })\n    });\n    const result = await response.json();\n    if (result.status === 'success') {\n      navigate('/success'); // Navigate to a success page or handle success scenario\n    } else {\n      alert(result.message); // Show error message\n    }\n  };\n\n  // Filter courses based on search term\n  const filteredCourses = courses.filter(course => course.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      src: \"/videos/sign-in.mp4\",\n      autoPlay: true,\n      loop: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Your Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Select all the courses you have previously taken to enhance your academic advising experience.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search courses...\",\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"courses-list\",\n        children: filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `course_${course.id}`,\n            checked: selectedCourses.includes(course.id),\n            onChange: () => handleCourseToggle(course.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `course_${course.id}`,\n            children: course.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, course.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        children: \"Submit Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseSelection, \"j5S8xo6LFmQNTeO1VUA5KwNUSog=\", false, function () {\n  return [useNavigate];\n});\n_c = CourseSelection;\nexport default CourseSelection;\nvar _c;\n$RefreshReg$(_c, \"CourseSelection\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CourseSelection","_s","courses","setCourses","selectedCourses","setSelectedCourses","searchTerm","setSearchTerm","navigate","fetchCourses","response","fetch","data","json","handleCourseToggle","courseId","prevSelectedCourses","includes","filter","id","handleSubmit","method","headers","body","JSON","stringify","student_id","selected_courses","result","status","alert","message","filteredCourses","course","name","toLowerCase","className","children","src","autoPlay","loop","muted","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","map","checked","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/courses/courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './courses.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CourseSelection() {\n  const [courses, setCourses] = useState([]); // State to store the list of courses\n  const [selectedCourses, setSelectedCourses] = useState([]); // State to store selected courses\n  const [searchTerm, setSearchTerm] = useState(''); // State to store the search term\n  const navigate = useNavigate();\n\n  // Fetch courses on component mount\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const response = await fetch('http://localhost:5000/api/courses/courses');\n      const data = await response.json();\n      setCourses(data);\n    };\n\n    fetchCourses();\n  }, []);\n\n  // Handle course toggle\n  const handleCourseToggle = (courseId) => {\n    setSelectedCourses(prevSelectedCourses =>\n      prevSelectedCourses.includes(courseId)\n        ? prevSelectedCourses.filter(id => id !== courseId)\n        : [...prevSelectedCourses, courseId]\n    );\n  };\n\n  // Handle submit\n  const handleSubmit = async () => {\n    const response = await fetch('http://localhost:5000/api/courses/select-courses', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        student_id: 'your_student_id', // Replace 'your_student_id' with the actual student ID\n        selected_courses: selectedCourses\n      })\n    });\n    const result = await response.json();\n    if (result.status === 'success') {\n      navigate('/success'); // Navigate to a success page or handle success scenario\n    } else {\n      alert(result.message); // Show error message\n    }\n  };\n\n  // Filter courses based on search term\n  const filteredCourses = courses.filter(course =>\n    course.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className='hero-container'>\n      <video src='/videos/sign-in.mp4' autoPlay loop muted />\n      <h1>Select Your Courses</h1>\n      <p className='description'>\n        Select all the courses you have previously taken to enhance your academic advising experience.\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"Search courses...\"\n        onChange={e => setSearchTerm(e.target.value)}\n        className=\"search-bar\"\n      />\n      <div className='course-selection-container'>\n        <div className='courses-list'>\n          {filteredCourses.map(course => (\n            <div key={course.id} className='course-item'>\n              <input\n                type=\"checkbox\"\n                id={`course_${course.id}`}\n                checked={selectedCourses.includes(course.id)}\n                onChange={() => handleCourseToggle(course.id)}\n              />\n              <label htmlFor={`course_${course.id}`}>{course.name}</label>\n            </div>\n          ))}\n        </div>\n        <button className='submit-button' onClick={handleSubmit}>Submit Courses</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CourseSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}