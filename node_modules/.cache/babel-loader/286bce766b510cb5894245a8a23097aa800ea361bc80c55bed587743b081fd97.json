{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Archived Chats/SavedConversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SavedConversation.css';\nimport backgroundImage from '../../../images/archived-chats.jpg';\nimport Footer from '../../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedConversation = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/conversations/1'); // Use actual student ID here\n        const data = await response.json();\n        setConversations(data);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n      }\n    };\n    fetchConversations();\n  }, []);\n  const viewConversation = title => {\n    alert('Viewing conversation: ' + title);\n  };\n  const deleteConversation = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/conversations/delete/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setConversations(conversations.filter(conversation => conversation.id !== id));\n      } else {\n        console.error('Failed to delete the conversation');\n      }\n    } catch (error) {\n      console.error('Error deleting conversation:', error);\n    }\n  };\n  const toggleFavorite = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/conversations/toggle_favorite/${id}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        if (favorites.includes(id)) {\n          setFavorites(favorites.filter(fav => fav !== id));\n        } else {\n          setFavorites([...favorites, id]);\n        }\n      } else {\n        console.error('Failed to toggle favorite');\n      }\n    } catch (error) {\n      console.error('Error toggling favorite:', error);\n    }\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredConversations = conversations.filter(conversation => conversation.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedConversations = showFavorites ? filteredConversations.filter(conversation => favorites.includes(conversation.id)) : filteredConversations;\n  const backgroundImageStyle = {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    minHeight: '100vh',\n    padding: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: backgroundImageStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Archived Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search conversations...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-favorites-button\",\n          onClick: () => setShowFavorites(!showFavorites),\n          children: showFavorites ? 'Show All Conversations' : 'Show Favorites Only'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-list\",\n          children: displayedConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: conversation.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"conversation-date\",\n              children: conversation.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: conversation.snippet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-button\",\n                onClick: () => viewConversation(conversation.title),\n                children: \"View Full Conversation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => deleteConversation(conversation.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"favorite-button\",\n                onClick: () => toggleFavorite(conversation.id),\n                style: {\n                  background: favorites.includes(conversation.id) ? 'gold' : '#0779e4'\n                },\n                children: favorites.includes(conversation.id) ? 'Unfavorite' : 'Favorite'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, conversation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(SavedConversation, \"XXGXR18nEoFPwD33RZ7X2T/EzMg=\");\n_c = SavedConversation;\nexport default SavedConversation;\nvar _c;\n$RefreshReg$(_c, \"SavedConversation\");","map":{"version":3,"names":["React","useEffect","useState","backgroundImage","Footer","jsxDEV","_jsxDEV","SavedConversation","_s","conversations","setConversations","searchTerm","setSearchTerm","favorites","setFavorites","showFavorites","setShowFavorites","fetchConversations","response","fetch","data","json","error","console","viewConversation","title","alert","deleteConversation","id","method","ok","filter","conversation","toggleFavorite","includes","fav","handleSearch","event","target","value","filteredConversations","toLowerCase","displayedConversations","backgroundImageStyle","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","padding","children","style","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","map","date","snippet","background","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Archived Chats/SavedConversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SavedConversation.css';\nimport backgroundImage from '../../../images/archived-chats.jpg';\nimport Footer from '../../Footer';\n\nconst SavedConversation = () => {\n    const [conversations, setConversations] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [favorites, setFavorites] = useState([]);\n    const [showFavorites, setShowFavorites] = useState(false);\n\n    useEffect(() => {\n        const fetchConversations = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/api/conversations/1'); // Use actual student ID here\n                const data = await response.json();\n                setConversations(data);\n            } catch (error) {\n                console.error('Failed to fetch conversations:', error);\n            }\n        };\n        fetchConversations();\n    }, []);\n\n    const viewConversation = (title) => {\n        alert('Viewing conversation: ' + title);\n    };\n\n    const deleteConversation = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/conversations/delete/${id}`, { method: 'DELETE' });\n            if (response.ok) {\n                setConversations(conversations.filter(conversation => conversation.id !== id));\n            } else {\n                console.error('Failed to delete the conversation');\n            }\n        } catch (error) {\n            console.error('Error deleting conversation:', error);\n        }\n    };\n\n    const toggleFavorite = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/conversations/toggle_favorite/${id}`, { method: 'POST' });\n            if (response.ok) {\n                if (favorites.includes(id)) {\n                    setFavorites(favorites.filter(fav => fav !== id));\n                } else {\n                    setFavorites([...favorites, id]);\n                }\n            } else {\n                console.error('Failed to toggle favorite');\n            }\n        } catch (error) {\n            console.error('Error toggling favorite:', error);\n        }\n    };\n\n    const handleSearch = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const filteredConversations = conversations.filter(conversation =>\n        conversation.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    const displayedConversations = showFavorites\n        ? filteredConversations.filter(conversation => favorites.includes(conversation.id))\n        : filteredConversations;\n\n    const backgroundImageStyle = {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        minHeight: '100vh',\n        padding: '20px'\n    };\n\n    return (\n        <div>\n            <div style={backgroundImageStyle}>\n                <header>\n                    <h1>Archived Chats</h1>\n                </header>\n                <div className=\"container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search conversations...\"\n                        value={searchTerm}\n                        onChange={handleSearch}\n                        className=\"search-bar\"\n                    />\n                    <button\n                        className=\"toggle-favorites-button\"\n                        onClick={() => setShowFavorites(!showFavorites)}\n                    >\n                        {showFavorites ? 'Show All Conversations' : 'Show Favorites Only'}\n                    </button>\n                    <div className=\"conversation-list\">\n                        {displayedConversations.map(conversation => (\n                            <div key={conversation.id} className=\"conversation-item\">\n                                <h3>{conversation.title}</h3>\n                                <p className=\"conversation-date\">{conversation.date}</p>\n                                <p>{conversation.snippet}</p>\n                                <div className=\"actions\">\n                                    <button className=\"view-button\" onClick={() => viewConversation(conversation.title)}>View Full Conversation</button>\n                                    <button className=\"delete-button\" onClick={() => deleteConversation(conversation.id)}>Delete</button>\n                                    <button\n                                        className=\"favorite-button\"\n                                        onClick={() => toggleFavorite(conversation.id)}\n                                        style={{ background: favorites.includes(conversation.id) ? 'gold' : '#0779e4' }}\n                                    >\n                                        {favorites.includes(conversation.id) ? 'Unfavorite' : 'Favorite'}\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default SavedConversation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}