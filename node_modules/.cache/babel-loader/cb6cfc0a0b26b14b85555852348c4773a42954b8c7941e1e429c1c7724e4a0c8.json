{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./AdvisorChatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdvisorChatbot=()=>{const[message,setMessage]=useState('');const[chatResponses,setChatResponses]=useState([]);const messageInputRef=useRef(null);const chatEndRef=useRef(null);const sendMessage=()=>{if(!message)return;appendMessage('You',message);fetch('http://localhost:5000/chat/message',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message})}).then(response=>response.json()).then(data=>{appendMessage('Helper',data.data);}).catch(error=>{console.error('Error:',error);appendMessage('Helper','Error communicating with the server.');});setMessage('');// Clear the message input after sending\n};const saveConversation=()=>{fetch('http://localhost:5000/chat/save_conversation',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({student_id:1})// Example student ID\n}).then(response=>response.json()).then(data=>{appendMessage('Helper',data.data);// Show success message\n}).catch(error=>{console.error('Error:',error);appendMessage('Helper','Error saving the conversation.');});};const appendMessage=(sender,text)=>{setChatResponses(prevResponses=>[...prevResponses,{sender,text}]);};useEffect(()=>{const chatEnd=chatEndRef.current;if(chatEnd){chatEnd.scrollIntoView({behavior:'smooth'});}},[chatResponses]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-section\",children:[chatResponses.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"welcome-message\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"How can I help you today?\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-responses\",children:[chatResponses.map((response,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"chat-message \".concat(response.sender==='You'?'user-message':'bot-message'),children:response.text},index)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-input-section\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();sendMessage();},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"messageInput\",placeholder:\"Message Uniguide Advisor\",value:message,onChange:e=>setMessage(e.target.value),ref:messageInputRef}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:saveConversation,children:\"Save Conversation\"})]})})]});};export default AdvisorChatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","AdvisorChatbot","message","setMessage","chatResponses","setChatResponses","messageInputRef","chatEndRef","sendMessage","appendMessage","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","saveConversation","student_id","sender","text","prevResponses","chatEnd","current","scrollIntoView","behavior","className","children","length","map","index","concat","ref","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","onClick"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Advisor Chatbot/AdvisorChatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AdvisorChatbot.css';\n\nconst AdvisorChatbot = () => {\n  const [message, setMessage] = useState('');\n  const [chatResponses, setChatResponses] = useState([]);\n  const messageInputRef = useRef(null);\n  const chatEndRef = useRef(null);\n\n  const sendMessage = () => {\n    if (!message) return;\n    appendMessage('You', message);\n    fetch('http://localhost:5000/chat/message', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message })\n    }).then(response => response.json())\n      .then(data => {\n        appendMessage('Helper', data.data);\n      }).catch(error => {\n        console.error('Error:', error);\n        appendMessage('Helper', 'Error communicating with the server.');\n      });\n    setMessage('');  // Clear the message input after sending\n  };\n\n  const saveConversation = () => {\n    fetch('http://localhost:5000/chat/save_conversation', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ student_id: 1 }) // Example student ID\n    }).then(response => response.json())\n      .then(data => {\n        appendMessage('Helper', data.data); // Show success message\n      }).catch(error => {\n        console.error('Error:', error);\n        appendMessage('Helper', 'Error saving the conversation.');\n      });\n  };\n\n  const appendMessage = (sender, text) => {\n    setChatResponses(prevResponses => [...prevResponses, { sender, text }]);\n  };\n\n  useEffect(() => {\n    const chatEnd = chatEndRef.current;\n    if (chatEnd) {\n      chatEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatResponses]);\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-section\">\n        {chatResponses.length === 0 && (\n          <div className=\"welcome-message\">\n            <h1>How can I help you today?</h1>\n          </div>\n        )}\n        <div className=\"chat-responses\">\n          {chatResponses.map((response, index) => (\n            <div key={index} className={`chat-message ${response.sender === 'You' ? 'user-message' : 'bot-message'}`}>\n              {response.text}\n            </div>\n          ))}\n          <div ref={chatEndRef}></div>\n        </div>\n      </div>\n      <div className=\"chat-input-section\">\n        <form onSubmit={e => { e.preventDefault(); sendMessage(); }}>\n          <input\n            type=\"text\"\n            id=\"messageInput\"\n            placeholder=\"Message Uniguide Advisor\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            ref={messageInputRef}\n          />\n          <button type=\"submit\">Send</button>\n          <button type=\"button\" onClick={saveConversation}>Save Conversation</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvisorChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}