{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Sign In/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Optionally check local storage or cookies to see if the user is already logged in\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    setIsAuthenticated(loggedIn);\n  }, []);\n  const login = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isLoggedIn', 'true');\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isLoggedIn');\n    // Make sure to clear all session or token related data\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loggedIn","localStorage","getItem","login","setItem","logout","removeItem","AuthContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Sign In/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // Optionally check local storage or cookies to see if the user is already logged in\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    setIsAuthenticated(loggedIn);\n  }, []);\n\n  const login = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isLoggedIn', 'true');\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isLoggedIn');\n    // Make sure to clear all session or token related data\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\nconst AuthContext = createContext(null);\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;IAC9DH,kBAAkB,CAACC,QAAQ,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGA,CAAA,KAAM;IAClBJ,kBAAkB,CAAC,IAAI,CAAC;IACxBE,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;EAC5C,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBN,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;IACrC;EACF,CAAC;EAED,oBACEZ,OAAA,CAACa,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEX,eAAe;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EAC7DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAzBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA4BzB,MAAMY,WAAW,gBAAGjB,aAAa,CAAC,IAAI,CAAC;AACvC,eAAeiB,WAAW;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}