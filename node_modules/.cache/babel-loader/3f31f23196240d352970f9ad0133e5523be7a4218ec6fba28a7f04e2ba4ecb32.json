{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Exam Pal/ExamPal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ExamPal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPal = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [pdfPath, setPdfPath] = useState('');\n  const [message, setMessage] = useState('');\n  const [chatResponses, setChatResponses] = useState([]);\n  const messageInputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatResponses]);\n  const handleFileSelect = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setFileName(selectedFile.name);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/pdfchat/upload', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include' // Include cookies with the request\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setPdfPath(data.path);\n        setMessage('');\n        messageInputRef.current.focus();\n      } else {\n        alert('Upload failed: ' + data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error uploading file.');\n    }\n  };\n  const sendMessage = async () => {\n    if (!message || !pdfPath) {\n      alert(\"Please upload a file and enter a message before sending.\");\n      return;\n    }\n    appendMessage('You', message);\n    const payload = {\n      pdf_path: pdfPath,\n      message\n    };\n    try {\n      const response = await fetch('http://localhost:5000/pdfchat/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include' // Include cookies with the request\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(`HTTP error, status = ${response.status}`);\n      appendMessage('Helper', data.response);\n      setMessage('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const appendMessage = (sender, text) => {\n    setChatResponses(prevResponses => [...prevResponses, {\n      sender,\n      text\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [chatResponses.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How can I help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatResponses\",\n        className: \"chat-responses\",\n        children: [chatResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${response.sender === 'You' ? 'user-message' : 'bot-message'}`,\n          children: response.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          sendMessage();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-upload\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileSelect,\n          ref: fileInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileInputRef.current.click(),\n          className: \"file-select-button\",\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !file,\n          className: \"file-upload-button\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Message Study Pal\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          ref: messageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !pdfPath || !message.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPal, \"Vd3Tp0qQeisgNCT/s7ij7W4BI+M=\");\n_c = ExamPal;\nexport default ExamPal;\nvar _c;\n$RefreshReg$(_c, \"ExamPal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ExamPal","_s","file","setFile","fileName","setFileName","pdfPath","setPdfPath","message","setMessage","chatResponses","setChatResponses","messageInputRef","fileInputRef","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleFileSelect","event","selectedFile","target","files","name","handleUpload","alert","formData","FormData","append","response","fetch","method","body","credentials","data","json","ok","path","focus","error","console","sendMessage","appendMessage","payload","pdf_path","headers","JSON","stringify","Error","status","sender","text","prevResponses","className","children","length","_jsxFileName","lineNumber","columnNumber","id","map","index","ref","onSubmit","e","preventDefault","type","style","display","onChange","onClick","click","disabled","placeholder","value","trim","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Exam Pal/ExamPal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ExamPal.css';\n\nconst ExamPal = () => {\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [pdfPath, setPdfPath] = useState('');\n  const [message, setMessage] = useState('');\n  const [chatResponses, setChatResponses] = useState([]);\n  const messageInputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chatResponses]);\n\n  const handleFileSelect = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setFileName(selectedFile.name);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n  \n    try {\n      const response = await fetch('http://localhost:5000/pdfchat/upload', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'  // Include cookies with the request\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setPdfPath(data.path);\n        setMessage('');\n        messageInputRef.current.focus();\n      } else {\n        alert('Upload failed: ' + data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error uploading file.');\n    }\n  };\n  \n\n  const sendMessage = async () => {\n    if (!message || !pdfPath) {\n      alert(\"Please upload a file and enter a message before sending.\");\n      return;\n    }\n    appendMessage('You', message);\n    const payload = { pdf_path: pdfPath, message };\n  \n    try {\n      const response = await fetch('http://localhost:5000/pdfchat/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n        credentials: 'include'  // Include cookies with the request\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(`HTTP error, status = ${response.status}`);\n      appendMessage('Helper', data.response);\n      setMessage('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  const appendMessage = (sender, text) => {\n    setChatResponses(prevResponses => [...prevResponses, { sender, text }]);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-section\">\n        {chatResponses.length === 0 && (\n          <div className=\"welcome-message\">\n            <h1>How can I help you today?</h1>\n          </div>\n        )}\n        <div id=\"chatResponses\" className=\"chat-responses\">\n          {chatResponses.map((response, index) => (\n            <div key={index} className={`chat-message ${response.sender === 'You' ? 'user-message' : 'bot-message'}`}>\n              {response.text}\n            </div>\n          ))}\n          <div ref={chatEndRef}></div>\n        </div>\n      </div>\n      <div className=\"chat-input-section\">\n        <form onSubmit={e => { e.preventDefault(); sendMessage(); }}>\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            style={{ display: 'none' }}\n            onChange={handleFileSelect}\n            ref={fileInputRef}\n          />\n          <button onClick={() => fileInputRef.current.click()} className=\"file-select-button\">Select File</button>\n          <span>{fileName}</span>\n          <button onClick={handleUpload} disabled={!file} className=\"file-upload-button\">Upload File</button>\n          <textarea\n            placeholder=\"Message Study Pal\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            ref={messageInputRef}\n          />\n          <button type=\"submit\" disabled={!pdfPath || !message.trim()}>Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ExamPal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}