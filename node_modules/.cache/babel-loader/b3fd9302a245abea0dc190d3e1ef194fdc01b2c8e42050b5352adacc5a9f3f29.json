{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./SavedConversation.css';import backgroundImage from'../../../images/archived-chats.jpg';import Footer from'../../Footer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SavedConversation=()=>{const[conversations,setConversations]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[favorites,setFavorites]=useState([]);const[showFavorites,setShowFavorites]=useState(false);useEffect(()=>{const fetchConversations=async()=>{try{const response=await fetch('http://localhost:5000/api/conversations/1');// Use actual student ID here\nconst data=await response.json();setConversations(data);}catch(error){console.error('Failed to fetch conversations:',error);}};fetchConversations();},[]);const viewConversation=title=>{alert('Viewing conversation: '+title);};const deleteConversation=async id=>{try{const response=await fetch(\"http://localhost:5000/api/conversations/delete/\".concat(id),{method:'DELETE'});if(response.ok){setConversations(conversations.filter(conversation=>conversation.id!==id));}else{console.error('Failed to delete the conversation');}}catch(error){console.error('Error deleting conversation:',error);}};const toggleFavorite=async id=>{try{const response=await fetch(\"http://localhost:5000/api/conversations/toggle_favorite/\".concat(id),{method:'POST'});if(response.ok){if(favorites.includes(id)){setFavorites(favorites.filter(fav=>fav!==id));}else{setFavorites([...favorites,id]);}}else{console.error('Failed to toggle favorite');}}catch(error){console.error('Error toggling favorite:',error);}};const handleSearch=event=>{setSearchTerm(event.target.value);};const filteredConversations=conversations.filter(conversation=>conversation.title.toLowerCase().includes(searchTerm.toLowerCase()));const displayedConversations=showFavorites?filteredConversations.filter(conversation=>favorites.includes(conversation.id)):filteredConversations;const backgroundImageStyle={backgroundImage:\"url(\".concat(backgroundImage,\")\"),backgroundSize:'cover',backgroundPosition:'center',backgroundRepeat:'no-repeat',minHeight:'100vh',padding:'20px'};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:backgroundImageStyle,children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Archived Chats\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search conversations...\",value:searchTerm,onChange:handleSearch,className:\"search-bar\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-favorites-button\",onClick:()=>setShowFavorites(!showFavorites),children:showFavorites?'Show All Conversations':'Show Favorites Only'}),/*#__PURE__*/_jsx(\"div\",{className:\"conversation-list\",children:displayedConversations.map(conversation=>/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:conversation.title}),/*#__PURE__*/_jsx(\"p\",{className:\"conversation-date\",children:conversation.date}),/*#__PURE__*/_jsx(\"p\",{children:conversation.snippet}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"view-button\",onClick:()=>viewConversation(conversation.title),children:\"View Full Conversation\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>deleteConversation(conversation.id),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"favorite-button\",onClick:()=>toggleFavorite(conversation.id),style:{background:favorites.includes(conversation.id)?'gold':'#0779e4'},children:favorites.includes(conversation.id)?'Unfavorite':'Favorite'})]})]},conversation.id))})]})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default SavedConversation;","map":{"version":3,"names":["React","useEffect","useState","backgroundImage","Footer","jsx","_jsx","jsxs","_jsxs","SavedConversation","conversations","setConversations","searchTerm","setSearchTerm","favorites","setFavorites","showFavorites","setShowFavorites","fetchConversations","response","fetch","data","json","error","console","viewConversation","title","alert","deleteConversation","id","concat","method","ok","filter","conversation","toggleFavorite","includes","fav","handleSearch","event","target","value","filteredConversations","toLowerCase","displayedConversations","backgroundImageStyle","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","padding","children","style","className","type","placeholder","onChange","onClick","map","date","snippet","background"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Archived Chats/SavedConversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SavedConversation.css';\nimport backgroundImage from '../../../images/archived-chats.jpg';\nimport Footer from '../../Footer';\n\nconst SavedConversation = () => {\n    const [conversations, setConversations] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [favorites, setFavorites] = useState([]);\n    const [showFavorites, setShowFavorites] = useState(false);\n\n    useEffect(() => {\n        const fetchConversations = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/api/conversations/1'); // Use actual student ID here\n                const data = await response.json();\n                setConversations(data);\n            } catch (error) {\n                console.error('Failed to fetch conversations:', error);\n            }\n        };\n        fetchConversations();\n    }, []);\n\n    const viewConversation = (title) => {\n        alert('Viewing conversation: ' + title);\n    };\n\n    const deleteConversation = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/conversations/delete/${id}`, { method: 'DELETE' });\n            if (response.ok) {\n                setConversations(conversations.filter(conversation => conversation.id !== id));\n            } else {\n                console.error('Failed to delete the conversation');\n            }\n        } catch (error) {\n            console.error('Error deleting conversation:', error);\n        }\n    };\n\n    const toggleFavorite = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/conversations/toggle_favorite/${id}`, { method: 'POST' });\n            if (response.ok) {\n                if (favorites.includes(id)) {\n                    setFavorites(favorites.filter(fav => fav !== id));\n                } else {\n                    setFavorites([...favorites, id]);\n                }\n            } else {\n                console.error('Failed to toggle favorite');\n            }\n        } catch (error) {\n            console.error('Error toggling favorite:', error);\n        }\n    };\n\n    const handleSearch = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const filteredConversations = conversations.filter(conversation =>\n        conversation.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    const displayedConversations = showFavorites\n        ? filteredConversations.filter(conversation => favorites.includes(conversation.id))\n        : filteredConversations;\n\n    const backgroundImageStyle = {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        minHeight: '100vh',\n        padding: '20px'\n    };\n\n    return (\n        <div>\n            <div style={backgroundImageStyle}>\n                <header>\n                    <h1>Archived Chats</h1>\n                </header>\n                <div className=\"container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search conversations...\"\n                        value={searchTerm}\n                        onChange={handleSearch}\n                        className=\"search-bar\"\n                    />\n                    <button\n                        className=\"toggle-favorites-button\"\n                        onClick={() => setShowFavorites(!showFavorites)}\n                    >\n                        {showFavorites ? 'Show All Conversations' : 'Show Favorites Only'}\n                    </button>\n                    <div className=\"conversation-list\">\n                        {displayedConversations.map(conversation => (\n                            <div key={conversation.id} className=\"conversation-item\">\n                                <h3>{conversation.title}</h3>\n                                <p className=\"conversation-date\">{conversation.date}</p>\n                                <p>{conversation.snippet}</p>\n                                <div className=\"actions\">\n                                    <button className=\"view-button\" onClick={() => viewConversation(conversation.title)}>View Full Conversation</button>\n                                    <button className=\"delete-button\" onClick={() => deleteConversation(conversation.id)}>Delete</button>\n                                    <button\n                                        className=\"favorite-button\"\n                                        onClick={() => toggleFavorite(conversation.id)}\n                                        style={{ background: favorites.includes(conversation.id) ? 'gold' : '#0779e4' }}\n                                    >\n                                        {favorites.includes(conversation.id) ? 'Unfavorite' : 'Favorite'}\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default SavedConversation;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,yBAAyB,CAChC,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,MAAM,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACc,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEzDD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAiB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2CAA2C,CAAC,CAAE;AAC3E,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCX,gBAAgB,CAACU,IAAI,CAAC,CAC1B,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CAC1D,CACJ,CAAC,CACDL,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,gBAAgB,CAAIC,KAAK,EAAK,CAChCC,KAAK,CAAC,wBAAwB,CAAGD,KAAK,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAE,kBAAkB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACrC,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,mDAAAU,MAAA,CAAmDD,EAAE,EAAI,CAAEE,MAAM,CAAE,QAAS,CAAC,CAAC,CAC1G,GAAIZ,QAAQ,CAACa,EAAE,CAAE,CACbrB,gBAAgB,CAACD,aAAa,CAACuB,MAAM,CAACC,YAAY,EAAIA,YAAY,CAACL,EAAE,GAAKA,EAAE,CAAC,CAAC,CAClF,CAAC,IAAM,CACHL,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC,CACtD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CAED,KAAM,CAAAY,cAAc,CAAG,KAAO,CAAAN,EAAE,EAAK,CACjC,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,4DAAAU,MAAA,CAA4DD,EAAE,EAAI,CAAEE,MAAM,CAAE,MAAO,CAAC,CAAC,CACjH,GAAIZ,QAAQ,CAACa,EAAE,CAAE,CACb,GAAIlB,SAAS,CAACsB,QAAQ,CAACP,EAAE,CAAC,CAAE,CACxBd,YAAY,CAACD,SAAS,CAACmB,MAAM,CAACI,GAAG,EAAIA,GAAG,GAAKR,EAAE,CAAC,CAAC,CACrD,CAAC,IAAM,CACHd,YAAY,CAAC,CAAC,GAAGD,SAAS,CAAEe,EAAE,CAAC,CAAC,CACpC,CACJ,CAAC,IAAM,CACHL,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CACpD,CACJ,CAAC,CAED,KAAM,CAAAe,YAAY,CAAIC,KAAK,EAAK,CAC5B1B,aAAa,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACrC,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAGhC,aAAa,CAACuB,MAAM,CAACC,YAAY,EAC3DA,YAAY,CAACR,KAAK,CAACiB,WAAW,CAAC,CAAC,CAACP,QAAQ,CAACxB,UAAU,CAAC+B,WAAW,CAAC,CAAC,CACtE,CAAC,CAED,KAAM,CAAAC,sBAAsB,CAAG5B,aAAa,CACtC0B,qBAAqB,CAACT,MAAM,CAACC,YAAY,EAAIpB,SAAS,CAACsB,QAAQ,CAACF,YAAY,CAACL,EAAE,CAAC,CAAC,CACjFa,qBAAqB,CAE3B,KAAM,CAAAG,oBAAoB,CAAG,CACzB1C,eAAe,QAAA2B,MAAA,CAAS3B,eAAe,KAAG,CAC1C2C,cAAc,CAAE,OAAO,CACvBC,kBAAkB,CAAE,QAAQ,CAC5BC,gBAAgB,CAAE,WAAW,CAC7BC,SAAS,CAAE,OAAO,CAClBC,OAAO,CAAE,MACb,CAAC,CAED,mBACI1C,KAAA,QAAA2C,QAAA,eACI3C,KAAA,QAAK4C,KAAK,CAAEP,oBAAqB,CAAAM,QAAA,eAC7B7C,IAAA,WAAA6C,QAAA,cACI7C,IAAA,OAAA6C,QAAA,CAAI,gBAAc,CAAI,CAAC,CACnB,CAAC,cACT3C,KAAA,QAAK6C,SAAS,CAAC,WAAW,CAAAF,QAAA,eACtB7C,IAAA,UACIgD,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,yBAAyB,CACrCd,KAAK,CAAE7B,UAAW,CAClB4C,QAAQ,CAAElB,YAAa,CACvBe,SAAS,CAAC,YAAY,CACzB,CAAC,cACF/C,IAAA,WACI+C,SAAS,CAAC,yBAAyB,CACnCI,OAAO,CAAEA,CAAA,GAAMxC,gBAAgB,CAAC,CAACD,aAAa,CAAE,CAAAmC,QAAA,CAE/CnC,aAAa,CAAG,wBAAwB,CAAG,qBAAqB,CAC7D,CAAC,cACTV,IAAA,QAAK+C,SAAS,CAAC,mBAAmB,CAAAF,QAAA,CAC7BP,sBAAsB,CAACc,GAAG,CAACxB,YAAY,eACpC1B,KAAA,QAA2B6C,SAAS,CAAC,mBAAmB,CAAAF,QAAA,eACpD7C,IAAA,OAAA6C,QAAA,CAAKjB,YAAY,CAACR,KAAK,CAAK,CAAC,cAC7BpB,IAAA,MAAG+C,SAAS,CAAC,mBAAmB,CAAAF,QAAA,CAAEjB,YAAY,CAACyB,IAAI,CAAI,CAAC,cACxDrD,IAAA,MAAA6C,QAAA,CAAIjB,YAAY,CAAC0B,OAAO,CAAI,CAAC,cAC7BpD,KAAA,QAAK6C,SAAS,CAAC,SAAS,CAAAF,QAAA,eACpB7C,IAAA,WAAQ+C,SAAS,CAAC,aAAa,CAACI,OAAO,CAAEA,CAAA,GAAMhC,gBAAgB,CAACS,YAAY,CAACR,KAAK,CAAE,CAAAyB,QAAA,CAAC,wBAAsB,CAAQ,CAAC,cACpH7C,IAAA,WAAQ+C,SAAS,CAAC,eAAe,CAACI,OAAO,CAAEA,CAAA,GAAM7B,kBAAkB,CAACM,YAAY,CAACL,EAAE,CAAE,CAAAsB,QAAA,CAAC,QAAM,CAAQ,CAAC,cACrG7C,IAAA,WACI+C,SAAS,CAAC,iBAAiB,CAC3BI,OAAO,CAAEA,CAAA,GAAMtB,cAAc,CAACD,YAAY,CAACL,EAAE,CAAE,CAC/CuB,KAAK,CAAE,CAAES,UAAU,CAAE/C,SAAS,CAACsB,QAAQ,CAACF,YAAY,CAACL,EAAE,CAAC,CAAG,MAAM,CAAG,SAAU,CAAE,CAAAsB,QAAA,CAE/ErC,SAAS,CAACsB,QAAQ,CAACF,YAAY,CAACL,EAAE,CAAC,CAAG,YAAY,CAAG,UAAU,CAC5D,CAAC,EACR,CAAC,GAdAK,YAAY,CAACL,EAelB,CACR,CAAC,CACD,CAAC,EACL,CAAC,EACL,CAAC,cACNvB,IAAA,CAACF,MAAM,GAAE,CAAC,EACT,CAAC,CAEd,CAAC,CAED,cAAe,CAAAK,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}