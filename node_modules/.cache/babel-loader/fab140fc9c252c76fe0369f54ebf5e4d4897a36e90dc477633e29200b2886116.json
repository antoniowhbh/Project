{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Advisor Chatbot/AdvisorChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AdvisorChatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvisorChatbot = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatResponses, setChatResponses] = useState([]);\n  const messageInputRef = useRef(null);\n  const chatEndRef = useRef(null);\n  const sendMessage = () => {\n    if (!message) return;\n    appendMessage('You', message);\n    fetch('http://localhost:5000/chat/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(response => response.json()).then(data => {\n      appendMessage('Helper', data.data);\n    }).catch(error => {\n      console.error('Error:', error);\n      appendMessage('Helper', 'Error communicating with the server.');\n    });\n    setMessage(''); // Clear the message input after sending\n  };\n  const saveConversation = () => {\n    fetch('http://localhost:5000/chat/save_conversation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        student_id: 1\n      }) // Example student ID\n    }).then(response => response.json()).then(data => {\n      appendMessage('Helper', data.data); // Show success message\n    }).catch(error => {\n      console.error('Error:', error);\n      appendMessage('Helper', 'Error saving the conversation.');\n    });\n  };\n  const appendMessage = (sender, text) => {\n    setChatResponses(prevResponses => [...prevResponses, {\n      sender,\n      text\n    }]);\n  };\n  useEffect(() => {\n    const chatEnd = chatEndRef.current;\n    if (chatEnd) {\n      chatEnd.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatResponses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [chatResponses.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How can I help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-responses\",\n        children: [chatResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${response.sender === 'You' ? 'user-message' : 'bot-message'}`,\n          children: response.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          sendMessage();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"messageInput\",\n          placeholder: \"Message Uniguide Advisor\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          ref: messageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: saveConversation,\n          children: \"Save Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvisorChatbot, \"FniQcRhyuT3H2bnFsaSmkB7AeJ4=\");\n_c = AdvisorChatbot;\nexport default AdvisorChatbot;\nvar _c;\n$RefreshReg$(_c, \"AdvisorChatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AdvisorChatbot","_s","message","setMessage","chatResponses","setChatResponses","messageInputRef","chatEndRef","sendMessage","appendMessage","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","saveConversation","student_id","sender","text","prevResponses","chatEnd","current","scrollIntoView","behavior","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/Advisor Chatbot/AdvisorChatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AdvisorChatbot.css';\n\nconst AdvisorChatbot = () => {\n  const [message, setMessage] = useState('');\n  const [chatResponses, setChatResponses] = useState([]);\n  const messageInputRef = useRef(null);\n  const chatEndRef = useRef(null);\n\n  const sendMessage = () => {\n    if (!message) return;\n    appendMessage('You', message);\n    fetch('http://localhost:5000/chat/message', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message })\n    }).then(response => response.json())\n      .then(data => {\n        appendMessage('Helper', data.data);\n      }).catch(error => {\n        console.error('Error:', error);\n        appendMessage('Helper', 'Error communicating with the server.');\n      });\n    setMessage('');  // Clear the message input after sending\n  };\n\n  const saveConversation = () => {\n    fetch('http://localhost:5000/chat/save_conversation', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ student_id: 1 }) // Example student ID\n    }).then(response => response.json())\n      .then(data => {\n        appendMessage('Helper', data.data); // Show success message\n      }).catch(error => {\n        console.error('Error:', error);\n        appendMessage('Helper', 'Error saving the conversation.');\n      });\n  };\n\n  const appendMessage = (sender, text) => {\n    setChatResponses(prevResponses => [...prevResponses, { sender, text }]);\n  };\n\n  useEffect(() => {\n    const chatEnd = chatEndRef.current;\n    if (chatEnd) {\n      chatEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatResponses]);\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-section\">\n        {chatResponses.length === 0 && (\n          <div className=\"welcome-message\">\n            <h1>How can I help you today?</h1>\n          </div>\n        )}\n        <div className=\"chat-responses\">\n          {chatResponses.map((response, index) => (\n            <div key={index} className={`chat-message ${response.sender === 'You' ? 'user-message' : 'bot-message'}`}>\n              {response.text}\n            </div>\n          ))}\n          <div ref={chatEndRef}></div>\n        </div>\n      </div>\n      <div className=\"chat-input-section\">\n        <form onSubmit={e => { e.preventDefault(); sendMessage(); }}>\n          <input\n            type=\"text\"\n            id=\"messageInput\"\n            placeholder=\"Message Uniguide Advisor\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            ref={messageInputRef}\n          />\n          <button type=\"submit\">Send</button>\n          <button type=\"button\" onClick={saveConversation}>Save Conversation</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvisorChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}