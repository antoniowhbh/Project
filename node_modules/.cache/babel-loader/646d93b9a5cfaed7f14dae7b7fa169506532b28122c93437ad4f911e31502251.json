{"ast":null,"code":"var _jsxFileName = \"/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/courses/courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './courses.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseSelection() {\n  _s();\n  const navigate = useNavigate();\n  const [courses, setCourses] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    const fetchCourses = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/courses'); // Ensure this is the correct endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n          throw new Error('Data format is incorrect, expected an array.');\n        }\n        setCourses(data);\n      } catch (e) {\n        setError(`Failed to fetch courses: ${e.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleCourseToggle = courseId => {\n    setSelectedCourses(prev => {\n      if (prev.includes(courseId)) {\n        return prev.filter(id => id !== courseId);\n      } else {\n        return [...prev, courseId];\n      }\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      const student_id = 1; // This should be securely retrieved, possibly from a user session or context\n      const response = await fetch('http://localhost:5000/api/select-courses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          student_id,\n          selected_courses: selectedCourses\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.error || 'Error submitting courses');\n      }\n      console.log('Courses submitted:', result);\n      navigate('/next-route'); // Update this path to where you want users redirected after submission\n    } catch (e) {\n      setError(`Error during submission: ${e.message}`);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading courses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      src: \"/videos/sign-in.mp4\",\n      autoPlay: true,\n      loop: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Your Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"courses-list\",\n        children: courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `course_${course.id}`,\n            checked: selectedCourses.includes(course.id),\n            onChange: () => handleCourseToggle(course.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `course_${course.id}`,\n            children: course.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, course.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        children: \"Submit Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseSelection, \"L7RwApzNr4iMsFoJ3YjTbwUm15o=\", false, function () {\n  return [useNavigate];\n});\n_c = CourseSelection;\nexport default CourseSelection;\nvar _c;\n$RefreshReg$(_c, \"CourseSelection\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CourseSelection","_s","navigate","courses","setCourses","selectedCourses","setSelectedCourses","isLoading","setIsLoading","error","setError","fetchCourses","response","fetch","ok","Error","status","data","json","Array","isArray","e","message","handleCourseToggle","courseId","prev","includes","filter","id","handleSubmit","student_id","method","headers","body","JSON","stringify","selected_courses","result","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","autoPlay","loop","muted","map","course","type","checked","onChange","htmlFor","name","onClick","_c","$RefreshReg$"],"sources":["/Users/antoniowehbe/PycharmProjects/pythonProject1/src/components/pages/courses/courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './courses.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CourseSelection() {\n  const navigate = useNavigate();\n  const [courses, setCourses] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    const fetchCourses = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/courses');  // Ensure this is the correct endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n          throw new Error('Data format is incorrect, expected an array.');\n        }\n        setCourses(data);\n      } catch (e) {\n        setError(`Failed to fetch courses: ${e.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCourses();\n  }, []);\n\n  const handleCourseToggle = (courseId) => {\n    setSelectedCourses(prev => {\n      if (prev.includes(courseId)) {\n        return prev.filter(id => id !== courseId);\n      } else {\n        return [...prev, courseId];\n      }\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const student_id = 1;  // This should be securely retrieved, possibly from a user session or context\n      const response = await fetch('http://localhost:5000/api/select-courses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ student_id, selected_courses: selectedCourses })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.error || 'Error submitting courses');\n      }\n      console.log('Courses submitted:', result);\n      navigate('/next-route'); // Update this path to where you want users redirected after submission\n    } catch (e) {\n      setError(`Error during submission: ${e.message}`);\n    }\n  };\n\n  if (isLoading) return <div>Loading courses...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className='hero-container'>\n      <video src='/videos/sign-in.mp4' autoPlay loop muted />\n      <h1>Select Your Courses</h1>\n      <div className='course-selection-container'>\n        <div className='courses-list'>\n          {courses.map(course => (\n            <div key={course.id} className='course-item'>\n              <input\n                type=\"checkbox\"\n                id={`course_${course.id}`}\n                checked={selectedCourses.includes(course.id)}\n                onChange={() => handleCourseToggle(course.id)}\n              />\n              <label htmlFor={`course_${course.id}`}>{course.name}</label>\n            </div>\n          ))}\n        </div>\n        <button className='submit-button' onClick={handleSubmit}>Submit Courses</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CourseSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}